"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfront_end_fisheye"] = self["webpackChunkfront_end_fisheye"] || []).push([["src_scripts_api_Api_js-src_scripts_factories_photographerFactory_js"],{

/***/ "./src/scripts/api/Api.js":
/*!********************************!*\
  !*** ./src/scripts/api/Api.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MediaApi\": () => (/* binding */ MediaApi),\n/* harmony export */   \"PhotographersApi\": () => (/* binding */ PhotographersApi)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/***\r\n *\r\n * Api\r\n *\r\n */\n// fetch the json file and retrieve the right array\nvar Api = /*#__PURE__*/function () {\n  function Api(url) {\n    _classCallCheck(this, Api);\n\n    this._url = url;\n  }\n\n  _createClass(Api, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resObject) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", fetch(this._url, {\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\"\n                  },\n                  mode: \"no-cors\"\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (res) {\n                  return res[resObject];\n                })[\"catch\"](function (err) {\n                  console.log(\"api error:\", err);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }]);\n\n  return Api;\n}(); // fetch the array containing all the photographers in the json\n\n\nvar PhotographersApi = /*#__PURE__*/function (_Api) {\n  _inherits(PhotographersApi, _Api);\n\n  var _super = _createSuper(PhotographersApi);\n\n  function PhotographersApi(url) {\n    _classCallCheck(this, PhotographersApi);\n\n    return _super.call(this, url);\n  }\n\n  _createClass(PhotographersApi, [{\n    key: \"getPhotographers\",\n    value: function () {\n      var _getPhotographers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.get(\"photographers\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getPhotographers() {\n        return _getPhotographers.apply(this, arguments);\n      }\n\n      return getPhotographers;\n    }()\n  }]);\n\n  return PhotographersApi;\n}(Api); // fetch the array containing all the medias in the json\n\nvar MediaApi = /*#__PURE__*/function (_Api2) {\n  _inherits(MediaApi, _Api2);\n\n  var _super2 = _createSuper(MediaApi);\n\n  function MediaApi(url) {\n    _classCallCheck(this, MediaApi);\n\n    return _super2.call(this, url);\n  }\n\n  _createClass(MediaApi, [{\n    key: \"getMedias\",\n    value: function () {\n      var _getMedias = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.get(\"media\");\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getMedias() {\n        return _getMedias.apply(this, arguments);\n      }\n\n      return getMedias;\n    }()\n  }]);\n\n  return MediaApi;\n}(Api);\n\n//# sourceURL=webpack://front-end-fisheye/./src/scripts/api/Api.js?");

/***/ }),

/***/ "./src/scripts/factories/photographerFactory.js":
/*!******************************************************!*\
  !*** ./src/scripts/factories/photographerFactory.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ photographerFactory)\n/* harmony export */ });\n/***\r\n *\r\n * Photographer Factory\r\n *\r\n *  */\nfunction photographerFactory(page, data, likesSum, contactModel) {\n  /***\r\n   *\r\n   * Defining variables for Photographer page\r\n   *\r\n   *  */\n  var name = data.name,\n      portrait = data.portrait,\n      city = data.city,\n      country = data.country,\n      tagline = data.tagline,\n      price = data.price,\n      id = data.id;\n  var picture = \"./assets/photographers/\".concat(portrait);\n  var $notification = document.createElement(\"div\");\n  /**\r\n   * Photographer page creation functions.\r\n   */\n\n  var createCard = function createCard() {\n    var $article = document.createElement(\"article\");\n    $article.classList.add(\"card\", \"card__photographer\");\n    $article.ariaLabel = name;\n    $article.setAttribute(\"aria-labelledby\", \"photograph-title-\" + id);\n    return $article;\n  };\n\n  var createCardHeader = function createCardHeader() {\n    var $link = document.createElement(\"a\");\n    $link.classList.add(\"card__header\");\n    $link.href = \"./photographer.html?id=\".concat(id);\n    $link.ariaLabel = \"Voir la page du photographe \".concat(name);\n    return $link;\n  };\n\n  var createPortrait = function createPortrait() {\n    var $img = document.createElement(\"img\");\n    $img.setAttribute(\"src\", picture);\n    $img.alt = \"portrait de \" + name;\n    $img.classList.add(\"portrait\", \"rounded\");\n    return $img;\n  };\n\n  var createPhotographerName = function createPhotographerName() {\n    var $title;\n\n    if (page === \"homepage\") {\n      $title = document.createElement(\"h3\");\n    } else if (page === \"photographer\") {\n      $title = document.createElement(\"h1\");\n    }\n\n    $title.textContent = name;\n    $title.classList.add(\"name\");\n    $title.id = \"photograph-title-\" + id;\n    return $title;\n  };\n\n  var createCardBody = function createCardBody() {\n    var $div = document.createElement(\"div\");\n    $div.classList.add(\"card__body\");\n    return $div;\n  };\n\n  var createLocation = function createLocation() {\n    var $h3 = document.createElement(\"h4\");\n    $h3.classList.add(\"location\");\n    $h3.textContent = \"\".concat(city, \", \").concat(country);\n    return $h3;\n  };\n\n  var createSlogan = function createSlogan() {\n    var $p = document.createElement(\"p\");\n    $p.classList.add(\"slogan\");\n    $p.textContent = tagline;\n    return $p;\n  };\n\n  var createQuote = function createQuote() {\n    var $p = document.createElement(\"p\");\n    $p.classList.add(\"quote\");\n    $p.textContent = \"\".concat(price, \"\\u20AC/jour\");\n    return $p;\n  };\n\n  var createHeaderText = function createHeaderText() {\n    var $div = document.createElement(\"div\");\n    $div.classList.add(\"photograph-header__text\");\n    var photographerName = createPhotographerName();\n    var location = createLocation();\n    var slogan = createSlogan();\n    $div.append(photographerName, location, slogan);\n    return $div;\n  };\n\n  var createHeaderSectionTitle = function createHeaderSectionTitle() {\n    var $h2 = document.createElement(\"h2\");\n    $h2.id = \"photograph-header__title\";\n    $h2.classList.add(\"photograph-header__title\", \"screen-reader\");\n    $h2.textContent = \"Entête de la page du photographe: \" + name;\n    return $h2;\n  };\n  /**\r\n   * Photographer page getter creation\r\n   */\n  // Populate and display the photographer card on the homepage\n\n\n  function getUserCardDOM(page) {\n    var $card = createCard();\n    var $cardHeader = createCardHeader();\n    var $cardBody = createCardBody();\n    var $img = createPortrait();\n    var $photographerName = createPhotographerName();\n    var $location = createLocation();\n    var $slogan = createSlogan();\n    var $quote = createQuote();\n    $cardHeader.append($img, $photographerName);\n    $cardBody.append($location, $slogan, $quote);\n    $card.append($cardHeader, $cardBody);\n    return $card;\n  } // Populate and display the header of the photographer page\n\n\n  function getUserHeaderDOM() {\n    var $button = document.querySelector(\".contact_button\");\n    var $sectionHeader = createHeaderSectionTitle();\n    var $headerText = createHeaderText();\n    var $headerPortrait = createPortrait();\n    $button.setAttribute(\"aria-label\", \"Contactez \" + name);\n    $button.before($sectionHeader, $headerText);\n    $button.after($headerPortrait);\n  }\n  /**\r\n   *\r\n   * Photographer page functions\r\n   *\r\n   */\n  //update the title of the document\n\n\n  var updatePageTitle = function updatePageTitle() {\n    return document.title = \"FishEye - Photographe \".concat(name);\n  }; // create the notification with the total likes number and the quote of the photographer\n\n\n  function stickyNotification() {\n    var $body = document.querySelector(\"body\");\n    $notification.classList.add(\"notification\");\n    $notification.ariaLabel = \"Informations sur \".concat(name);\n    var $likes = \"\\n    <div class=\\\"likes\\\" aria-label=\\\"likes de \".concat(name, \"\\\">\\n      <span class=\\\"likes-number\\\">\").concat(likesSum, \"</span>\\n      <svg role=\\\"img\\\" class=\\\"heart-icon\\\" aria-labelledby=\\\"heartTitle-global\\\">\\n          <title id=\\\"heartTitle-global\\\">\").concat(likesSum, \" Likes</title>\\n          <use xlink:href=\\\"#heart\\\" ></use>\\n        </svg>\\n    </div>\\n    \");\n    var $quote = \"<span aria-label=\\\"tarif de \".concat(name, \"\\\" class=\\\"quote\\\">\").concat(price, \"\\u20AC/jour</span>\");\n    $notification.innerHTML = $likes + $quote;\n    $body.appendChild($notification);\n  } // counter for the total of likes for the photographer\n\n\n  function counterPhotographerLikes(operation) {\n    if (operation == \"minus\") {\n      likesSum -= 1;\n    } else if (operation == \"plus\") {\n      likesSum += 1;\n    } else {\n      throw \"Unknown operation\";\n    }\n\n    updatePhotographerLikes();\n  } // update the total of likes for the photographer\n\n\n  function updatePhotographerLikes() {\n    var $notificationLikesWrapper = $notification.querySelector(\".likes-number\");\n    $notificationLikesWrapper.innerText = likesSum;\n  } // open the contact modal by calling the method of the modal object\n\n\n  function openContactModal() {\n    var $contactButton = document.querySelector(\".contact_button\");\n    $contactButton.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      contactModel.openModal();\n    });\n  }\n\n  return {\n    getUserCardDOM: getUserCardDOM,\n    name: name,\n    getUserHeaderDOM: getUserHeaderDOM,\n    updatePageTitle: updatePageTitle,\n    stickyNotification: stickyNotification,\n    counterPhotographerLikes: counterPhotographerLikes,\n    openContactModal: openContactModal\n  };\n}\n\n//# sourceURL=webpack://front-end-fisheye/./src/scripts/factories/photographerFactory.js?");

/***/ })

}]);